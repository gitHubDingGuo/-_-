package com.netdisc.dao;


import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Mapper;
import org.springframework.stereotype.Repository;

import com.netdisc.pojo.File;
import com.netdisc.pojo.FileVo;
import com.netdisc.pojo.Folder;

/**
 * @author Stodger
 * @date 2019年8月28日
 * @version
 */
@Repository
@Mapper
public interface FolderMapper {
    /**
     * 根据Id删除文件夹(不推荐使用)
     * @param id
     * @return
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * 添加文件夹(含空值)
     * @param record
     * @return
     */
    int insert(Folder record);

    /**
     * 添加文件夹(不含空值)
     * @param record
     * @return
     */
    int insertSelective(Folder record);

    /**
     * 根据Id查询
     * @param id
     * @return
     */
    Folder selectByPrimaryKey(Integer id);

    /**
     * 更新文件夹(不含空值)
     * @param record
     * @return
     */
    int updateByPrimaryKeySelective(Folder record);

    /**
     * 更新文件夹(含空值)
     * @param record
     * @return
     */
    int updateByPrimaryKey(Folder record);

    
    /**
     * 查找所有的子文件夹
     * @param id
     * @return
     */
    List selectAllFolder(Integer id);

	/**
	 * 獲取文件夾列表
	 * @param userId
	 * @param i
	 * @return
	 */
	List<Folder> folderLists(Map<String, Object> map);
	
	 /**
	  * 查找路径
	 * @param userId
	 * @param parentId
	 * @return
	 */
	Folder findFolder(Map<String, Object> map);


	/**
	 * @param parentId
	 * @return
	 */
	FileVo getFile(Integer parentId);

	/**
	 * 得到搜索的文件夹
	 * @param map
	 * @return
	 */
	List<Folder> searchFolderLists(Map<String, Object> map);
	
	/**
	 * 根据文件夹名搜索文件夹
	 * @param folderName
	 * @return
	 */
	Folder searchFolderByFolderName(String folderName);
	

}